## Time setting
---
- name: Time setting
  hosts: all
  tasks:
    - name: Time setting (1/3)
      command: timedatectl set-timezone UTC
    - name: Time setting (2/3)
      apt:
        update_cache: yes
    - name: Time setting (3/3)
      apt:
       name:
        - chrony
       state: present
      
## swap disable
- name: swap disable
  hosts: all
  tasks:
    - name: swap disable (1/2)
      shell: |
         swapoff -a
    - name: swap disabled (2/2)
      shell: swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab

## repo Package Install
- name: repo Package Install 
  hosts: all
  tasks:
    - name: repo Package Install
      apt:
       name:
        - apt-transport-https
        - software-properties-common
       state: present

## docker install
- name: docker install
  hosts: all
  tasks:
    - name: docker install (1/6)
      apt:
        update_cache: yes

    - name: docker install (2/6)
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release']

    - name: docker install (3/6)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: docker install (4/6)
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: docker install (5/6)
      apt: 
        update_cache: yes

    - name: docker install (6/6)
      apt:
       name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
       state: present
    - shell: docker version
      register: shell_result

    - debug:
        var: shell_result.stdout_lines

## kubernetes install
- name : kubernetes install
  hosts: all
  tasks:
    - name: iptables kernel option enable (1/2)
      lineinfile:
         path: '/etc/modules-load.d/k8s.conf'
         line: "br_netfilter"
         insertbefore: EOF
         create: yes
    - name: iptables kernel option enable (2/2)
      lineinfile:
         path: '/etc/sysctl.d/k8s.conf'
         line: "net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1"
         insertbefore: EOF
         create: yes

    - shell: cat /etc/sysctl.d/k8s.conf
      register: shell_result
    - debug:
        var: shell_result.stdout_lines
- name: cmd
  hosts: all
  tasks:
    - shell: sysctl --system
      register: shell_result2

    - debug:
        var: shell_result2.stdout_lines

- name: kubernetes repo add
  hosts: all
  tasks:
    - name: kubernetes repo add (1/2)
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: kubernetes repo add (2/2)
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
    
    - name: kubernetes install
      apt:
        update_cache: yes

- name : kubernetes pkg install
  hosts: all
  tasks:
    - name: kubernetes pkg install
      apt:
       name:
        - kubeadm
        - kubectl
        - kubelet
       state: present
    - shell: apt-mark hold kubelet kubeadm kubectl
    - shell: dpkg -l | grep kube*
      register: shell_result
    - debug:
        var: shell_result.stdout_lines

